# Unbinding keybinds
unbind C-f
unbind %
unbind "'"
unbind -T copy-mode-vi u
unbind -T copy-mode-vi e
unbind -T copy-mode-vi n
unbind -T copy-mode-vi i

# Setting terminal and default shell
set -g default-shell /usr/bin/zsh
set -g default-terminal "alacritty"
set -ga terminal-overrides ",alacritty:Tc"
# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 1
# Enable the new keyboard protocol for Tmux, and applying to the applications inside it on demand
set -s extended-keys on
# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000
# No bells at all
set -g bell-action none
# Focus events enabled for terminals that support them
set -g focus-events on
#: }}}

#: Global key bindings {{{
# Remap ; to : for convenience
bind \; command-prompt
# Use neovim key bindings
set -g mode-keys vi
set -g status-keys vi
# Increase repeat time for repeatable commands
set -g repeat-time 1000
# bind -n C-u if "test '#{pane_current_command}' = 'zsh'" "copy-mode; send -N 5 -X cursor-up"   "send C-u"
# bind -n C-e if "test '#{pane_current_command}' = 'zsh'" "copy-mode; send -N 5 -X cursor-down" "send C-e"
# A workround of Ctrl-i, since tmux has a bug that recognizes the Ctrl+i and Tab of CSI u as the same key
# https://github.com/tmux/tmux/issues/2705
bind -n C-\; "send Escape '[105;5u'"
# Force to enable CSI u of Ctrl+, for all program, in the zsh it's handled as "edit current command via neovim"
bind -n C-,  "send Escape '[44;5u'"
bind p paste-buffer       # Paste
bind C-p choose-buffer    # Tmux clipboard history
#bind "'" delete-buffer\; display "Clipboard history deleted"
#: }}}

bind -r u select-pane -U
bind -r e select-pane -D
bind -r n select-pane -L
bind -r i select-pane -R

bind -r C-u resize-pane -U 5
bind -r C-e resize-pane -D 5
bind -r C-n resize-pane -L 5
bind -r C-i resize-pane -R 5

bind -r N swap-pane -d -t -1
bind -r I swap-pane -d -t +1

bind -r x kill-pane

# Highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# Start window/pane index at 1
set -g base-index 1
set -g pane-base-index 1
# Re-number windows when one is closed
set -g renumber-windows on

bind n new-window -c "#{pane_current_path}"
bind r command-prompt "rename-window %%"
bind C-x kill-window

bind -r [ previous-window
bind -r ] next-window
bind -r C-[ swap-window -d -t -1
bind -r C-] swap-window -d -t +1

bind -r - split-window -h -c "#{pane_current_path}"
bind -r = split-window -v -c "#{pane_current_path}"

bind R command-prompt "rename-session %%"
bind q confirm-before -p "kill-session #S? (y/n)" kill-session

bind Escape copy-mode

bind -T copy-mode-vi u send -X cursor-up
bind -T copy-mode-vi U send -N 5 -X cursor-up
bind -T copy-mode-vi e send -X cursor-down
bind -T copy-mode-vi E send -N 5 -X cursor-down
bind -T copy-mode-vi n send -X cursor-left
bind -T copy-mode-vi N send -X start-of-line
bind -T copy-mode-vi i send -X cursor-right
bind -T copy-mode-vi I send -X end-of-line

bind -T copy-mode-vi v send -X begin-selection

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set status-bg red
%endif

set-option -g allow-rename off

# Refresh `status-left` and `status-right` more often, from every 15s to 5s
set -g status-interval 5

set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "basic"

# Load catppuccin
run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
# For TPM, instead use `run ~/.config/tmux/plugins/tmux/catppuccin.tmux`

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_uptime}"

run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
